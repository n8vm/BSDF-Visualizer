# BRDF from http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html

uniforms:
  alpha:
    type: "float"
    min: 0.001
    max: 0.7
    default: 0.1
  NdotL:
    type: "bool"
    default: false
  Rs:
    type: "float"
    min: 0
    max: 1
    default: 0.5
brdf: >
  #define M_PI 3.1415926535897932384626433832795

  float sqr(float x){
    return x*x;
  }

  // Schlick approximation

  float F(float KdotH){
    return Rs + (1.0 - Rs)*pow(1.0 - KdotH, 5.0);
  }

  //NDF term

  float D(float NdotM){
    float const_term = 1.0/(M_PI*sqr(alpha)*pow(NdotM,4.0));
    float exp_term = exp((sqr(NdotM) - 1.0)/(sqr(alpha)*sqr(NdotM)));
    return const_term * exp_term;
  }

  //Geometric Shadowing Term

  float G(float NdotV){
    float c = NdotV/(alpha*sqrt(1.0 - sqr(NdotV)));

    if(c < 1.6){
      return (3.535*c + 2.181*sqr(c))/(1.0 + 2.276*c + 2.577*sqr(c));
    }
    else {
      return 1.0;
    }
  }

  vec3 BRDF(vec3 L, vec3 V, vec3 N, vec3 X, vec3 Y){
    vec3 k1 = L;
    vec3 k2 = V;
    vec3 u = X;
    vec3 v = Y;
    vec3 H = normalize(L+V);
    float NdotH = dot(N,H);
    float KdotH = dot(V,H);
    float NdotV = dot(N,V);

    return vec3(D(NdotH)*F(KdotH)*G(NdotV)/(4.0*dot(N,L)*dot(N,V)));
  }
